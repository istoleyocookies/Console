apiVersion: v1
kind: ConfigMap
metadata:
  name: console-config-nginx
data:
  default.conf: |
    access_log                  /dev/stdout;
    error_log                   /dev/stdout debug;

    upstream hasura {
        keepalive                   100;
        server                      faction-hasura:8080;
    }

    upstream auth {
        keepalive                   100;
        server                      faction-auth:5000;
    }


    server {
        server_name                 localhost;
        listen                      443 ssl;
        ssl_certificate             /etc/nginx/ssl/faction-console.pem;
        ssl_certificate_key         /etc/nginx/ssl/faction-console.key;
        ssl_protocols               TLSv1.2;
        ssl_ciphers                 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers   on;
        root                        /usr/share/nginx/html;
        index                       index.html;
        error_page                  500 502 503 504  /50x.html;

        keepalive_timeout           3000;
        client_max_body_size        1g;

        proxy_connect_timeout       60s;
        proxy_read_timeout          1d;
        proxy_send_timeout          10m;
        gzip                        on;

        location / {
            add_header              X-Faction RocksSocks;
            try_files               $uri $uri/ =404;
        }


        location ~ ^/api/(v1/graphql.*)$ {
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "upgrade";
            proxy_pass              http://hasura/$1;
        }

        location /api/v1/auth/ {
            proxy_pass              http://auth/;
        }
    }
