user                            www;
error_log                       /dev/stdout debug;
pid                             /var/run/nginx.pid; # it permit you to use /etc/init.d/nginx reload|restart|stop|start

events {
    worker_connections          1024;
}

http {
    upstream apibackend {
        keepalive 100;
        server api:5000;
    }

    server {
        include                 /etc/nginx/mime.types;
        access_log              /dev/stdout;
        keepalive_timeout       3000;
        index                   index.html;
        listen                  80;
        # ssl_certificate         /opt/faction/certs/api.pem;
        # ssl_certificate_key     /opt/faction/certs/api.key;

        client_max_body_size    1g;
        error_page              500 502 503 504  /50x.html;

        root                    /var/www/;

        proxy_connect_timeout 60s;
        proxy_read_timeout 1d;
        proxy_send_timeout 10m;


        location / {
            add_header X-Faction RocksSocks;
            try_files $uri $uri/ /index.html;
        }


        location /api/v1/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://apibackend;
        }

        location /socket.io {
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_buffering off;
            proxy_redirect off;
            proxy_pass http://apibackend/socket.io;
        }
    }
}